apiVersion: v1
kind: Secret
metadata:
  name: uaa-admin-client-credentials
  namespace: uaa-system
  labels:
    app.kubernetes.io/component: authorization_server
    app.kubernetes.io/instance: uaa-standalone
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/name: uaa
    app.kubernetes.io/part-of: uaa
    app.kubernetes.io/version: 77.14.0
type: Opaque
stringData:
  admin_client_credentials.yml: |
    admin_client_secret: admin-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: uaa-jwt-policy-signing-keys
  namespace: uaa-system
  labels:
    app.kubernetes.io/component: authorization_server
    app.kubernetes.io/instance: uaa-standalone
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/name: uaa
    app.kubernetes.io/part-of: uaa
    app.kubernetes.io/version: 77.14.0
type: Opaque
stringData:
  jwt_policy_signing_keys.yml: |
    jwt:
      token:
        policy:
          activeKeyId: key-1
          keys:
            key-1:
              signingKey: |
                -----BEGIN PRIVATE KEY-----
                MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC86TXUwHix62GR
                WueivzokOU4s9ymEGfehe2BTbiDquv9xW7qaiKp3kvAcjRJ6GOw/bbtIypE46As4
                8F+E9pDGLMY0lFD7KOSgBmA9dYsYw+RkxVPNC9BrgjWKExvAUF+5R116dDT8kxud
                SnAMafXQ8ayRMg4EbRPJjw6Op9lyyqzw4I0cWP0d3mg/6WTXT/R6L2W2z+M0g6tD
                v00JAq/sZqVfEGxruo1K4FFgmWEOLKX0W6OXk/uHDq3r99Rfri5JsrlNPY0dp0Db
                678J/eS/BlQKkAFczWzaiFHjXlOMawBhoWNgv4iKdy0GOUYVVl13KIsj10RzhW3Y
                pOpIKNrhAgMBAAECggEACCuj/uQmNDfEfAds/k58AsYRugMkogiHe838wA8C0HQv
                CSWZAAcKLGrIBMwbMPmz+hhSYdcVCduLZLaMwxDw+QlFt0904zAFF2C/N9lGH1eV
                oMAiHDu3E3dJvoOODzbKtRY/lkTBZ+0q5BYsm3TXw2Y4ev0puwpGsVCFJilfT8Ye
                NDxk3geKv+XUN8e1IYxUokAuELJFESGN8dAxVVMhf1opGtEOy+L/+fCXHZTvE3u3
                8f9PsmOqmD+xr1BSQP04duTAgd5frtwXTXPvK3QlG2GSDzm/uAO84FAfYBcj84NP
                AHzKigXlhshcDk5rRGCGWk0UYKrlkvonJik64UA0swKBgQDwkwxvbniAkMWzL/mB
                ZQvmWTatubriQ2F+ol3l8py878bk2jAd2HDuhQZ3YPrSilG2JZo5LxRadcz861TB
                L64W6AbUAlUCsK2/qmjWTVgpK6RYje5efr0YVWTGfiXnsFj6KKSe70yxk9lxRnzH
                SVsYDyyWM3Joe9JhBwPRoAeiAwKBgQDJBh+FMB7TCK+/+wkjxfJksGjoUZZbcn/1
                3adiWCa+g8/8Cgg3XoQzzJ5fpnkm1w34uro30DGB6oe8vioAJeMmOmjj7U6MNf4k
                Kgn3G3NUv7Y1CVDDcpeK7kQ4yEucEwyaoTr+FNXpXx8ropybcgAsLbyVixSAZhcE
                qX6urEbMSwKBgCOFwwdNK5PoTJjp05Csp/YqZC2AyDySsHmvZegHS+eGDDtMkGBH
                zl0Z3VuRQVgHPouDv+MDtaCp1kveP9SKwsz1E9UIRx8vkWhEtFg4cXUa0ZiV1IW1
                dxx5t3irtdMhMfI2QCCLuypZZ3kXbGNMzJuf2fiPviv5ZJYZIBI67AWbAoGAQO0g
                WxUar5Bbq0b6QbqaOlkb2QUY6fpGR/PKLyJHiTrrfv0CgFefnVdWQ5ByCtBkq9Qr
                dwFgLBTCuHw29otGHT+6RvuLZg++QJHvXAdaraGpyOF0W1v0hCPGlwxiF0uzw3GV
                qyCxoklduOsxZ6dfVOWExkwAWCQhBRl1WBc+WpcCgYA1zFDPzM+LDcqGJdp+XH7c
                yHhqAnBgaopRq8pbgp4zvC9SMUIX8Hd/AGqDNQO7FjMfRFrTcrWdIb2W1EWxI3j8
                3D8DCRZNPZAoVG1BQcjRsgtPrFvErxFEBAKXxiuIXUw96RiBEX6xNmD4I10EyGK2
                Odnbw1oo+AIMC08hBCRbZg==
                -----END PRIVATE KEY-----
---
apiVersion: v1
kind: Secret
metadata:
  name: encryption-keys
  namespace: uaa-system
  labels:
    app.kubernetes.io/component: authorization_server
    app.kubernetes.io/instance: uaa-standalone
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/name: uaa
    app.kubernetes.io/part-of: uaa
    app.kubernetes.io/version: 77.14.0
type: Opaque
stringData:
  encryption_keys.yml: |
    encryption:
      active_key_label: uaa-encryption-key-1
      encryption_keys:
        - label: uaa-encryption-key-1
          passphrase: uaa-encryption-passphrase
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: uaa
  namespace: uaa-system
  labels:
    app.kubernetes.io/component: authorization_server
    app.kubernetes.io/instance: uaa-standalone
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/name: uaa
    app.kubernetes.io/part-of: uaa
    app.kubernetes.io/version: 77.14.0
---
apiVersion: v1
kind: Service
metadata:
  name: uaa
  namespace: uaa-system
  labels:
    app.kubernetes.io/component: authorization_server
    app.kubernetes.io/instance: uaa-standalone
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/name: uaa
    app.kubernetes.io/part-of: uaa
    app.kubernetes.io/version: 77.14.0
spec:
  ports:
  - name: http-uaa
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: uaa-deployment
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uaa
  namespace: uaa-system
  labels:
    app.kubernetes.io/component: authorization_server
    app.kubernetes.io/instance: uaa-standalone
    app.kubernetes.io/managed-by: kubectl
    app.kubernetes.io/name: uaa
    app.kubernetes.io/part-of: uaa
    app.kubernetes.io/version: 77.14.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uaa-deployment
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9102"
        prometheus.io/scrape: "true"
      labels:
        app: uaa-deployment
        app.kubernetes.io/component: authorization_server
        app.kubernetes.io/instance: uaa-standalone
        app.kubernetes.io/managed-by: kubectl
        app.kubernetes.io/name: uaa
        app.kubernetes.io/part-of: uaa
        app.kubernetes.io/version: 77.14.0
      namespace: uaa-system
    spec:
      containers:
      - env:
         - name: BPL_TOMCAT_ACCESS_LOGGING
           value: "y"
         - name: JAVA_OPTS
           value: >-
             -Dspring_profiles=hsqldb
             -Djava.security.egd=file:/dev/./urandom
             -Dlogging.config=/etc/config/log4j2.properties
             -Dlog4j.configurationFile=/etc/config/log4j2.properties
             -DCLOUDFOUNDRY_CONFIG_PATH=/etc/config
             -DSECRETS_DIR=/etc/secrets
             -Dstatsd.enabled=true
             -Dservlet.session-store=database
        image: cloudfoundry/uaa@sha256:7f080becfe62a71fe0429c62ad8afdf4f24e0aac94d9f226531ab3001fa35880
        livenessProbe:
          failureThreshold: 25
          httpGet:
            path: /healthz
            port: http-uaa
          initialDelaySeconds: 60
          periodSeconds: 15
        name: uaa
        ports:
        - containerPort: 8080
          name: http-uaa
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http-uaa
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 2000Mi
          requests:
            cpu: 50m
            memory: 512Mi
        volumeMounts:
        - mountPath: /etc/config
          name: uaa-config
        - mountPath: /etc/secrets/smtp_credentials.yml
          name: smtp-credentials-file
          readOnly: true
          subPath: smtp_credentials.yml
        - mountPath: /etc/secrets/database_credentials.yml
          name: database-credentials-file
          readOnly: true
          subPath: database_credentials.yml
        - mountPath: /etc/secrets/admin_client_credentials.yml
          name: admin-client-credentials-file
          readOnly: true
          subPath: admin_client_credentials.yml
        - mountPath: /etc/secrets/jwt_policy_signing_keys.yml
          name: jwt-policy-signing-keys-file
          readOnly: true
          subPath: jwt_policy_signing_keys.yml
        - mountPath: /etc/secrets/encryption_keys.yml
          name: encryption-keys-file
          readOnly: true
          subPath: encryption_keys.yml
      - args:
        - --statsd.listen-udp=:8125
        image: cloudfoundry/statsd_exporter:v0.15.0@sha256:10a64dc4ad0a3e3fe88372f0481dea5c02595c38d168617836a99a649d3ac407
        imagePullPolicy: Always
        name: statsd-exporter
        ports:
        - containerPort: 9102
          name: metrics-uaa
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 10Mi

      serviceAccountName: uaa
      volumes:
      - configMap:
          name: uaa-config
        name: uaa-config
      - name: smtp-credentials-file
        secret:
          optional: true
          secretName: uaa-smtp-credentials
      - name: database-credentials-file
        secret:
          optional: true
          secretName: uaa-database-credentials
      - name: admin-client-credentials-file
        secret:
          secretName: uaa-admin-client-credentials
      - name: jwt-policy-signing-keys-file
        secret:
          secretName: uaa-jwt-policy-signing-keys
      - name: encryption-keys-file
        secret:
          optional: false
          secretName: encryption-keys